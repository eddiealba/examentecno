{"remainingRequest":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\src\\components\\Home\\TrendingNews.vue?vue&type=template&id=c9996e30&","dependencies":[{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\src\\components\\Home\\TrendingNews.vue","mtime":1651267906051},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651158781863},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\index.js","mtime":1651158781173}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\src\\components\\Home\\TrendingNews.vue?vue&type=template&id=c9996e30&","dependencies":[{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\src\\components\\Home\\TrendingNews.vue","mtime":1651260030696},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651192600504},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651192611693},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651192600504},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\index.js","mtime":1651192611691}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxzZWN0aW9uIGNsYXNzPSJ0cmVuZGluZy1uZXdzLWFyZWEiPgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctOCI+CiAgICAgICAgPGRpdgogICAgICAgICAgOmNsYXNzPSJbCiAgICAgICAgICAgICdzZWN0aW9uLXRpdGxlJywKICAgICAgICAgICAgZGFya0NsYXNzICYmICd0aXRsZScgaW4gZGFya0NsYXNzID8gZGFya0NsYXNzLnRpdGxlIDogJycsCiAgICAgICAgICBdIgogICAgICAgID4KICAgICAgICAgIDxoMyBjbGFzcz0idGl0bGUiPk5vdGljaWFzIGRlbCBNb21lbnRvPC9oMz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0cmVuZGluZy1uZXdzLXNsaWRlciBwb3NpdGlvbi1yZWxhdGl2ZSI+CiAgICAgICAgICA8c3BhbgogICAgICAgICAgICBAY2xpY2s9InRyYW5kaW5nUHJldiIKICAgICAgICAgICAgY2xhc3M9InByZXYgc2xpY2stYXJyb3ciCiAgICAgICAgICAgIHN0eWxlPSJkaXNwbGF5OiBibG9jayIKICAgICAgICAgICAgPjxpIGNsYXNzPSJmYWwgZmEtYW5nbGUtbGVmdCI+PC9pCiAgICAgICAgICA+PC9zcGFuPgogICAgICAgICAgPHNsaWRlciA6c2V0dGluZ3M9InRyZW5kaW5nU2V0dGluZ3MiIHJlZj0idHJlbmRpbmdTbGlkZXIiPgogICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9IihkYXRhLCBpbmRleCkgaW4gVHJlbmRpbmdQb3N0cyI+CiAgICAgICAgICAgICAgPGRpdiA6a2V5PSJpbmRleCIgY2xhc3M9InB4LTIiPgogICAgICAgICAgICAgICAgPGRpdmlkZS1jYXJkCiAgICAgICAgICAgICAgICAgIDpjbGFzcz0iWwogICAgICAgICAgICAgICAgICAgIGRhcmtDbGFzcyAmJiAnaXRlbScgaW4gZGFya0NsYXNzID8gZGFya0NsYXNzLml0ZW0gOiAnJywKICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgc3R5cGU9ImNvbCIKICAgICAgICAgICAgICAgICAgOmRhdGFzPSJkYXRhIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvc2xpZGVyPgogICAgICAgICAgPHNwYW4KICAgICAgICAgICAgQGNsaWNrPSJ0cmFuZGluZ05leHQiCiAgICAgICAgICAgIGNsYXNzPSJuZXh0IHNsaWNrLWFycm93IgogICAgICAgICAgICBzdHlsZT0iZGlzcGxheTogYmxvY2siCiAgICAgICAgICAgID48aSBjbGFzcz0iZmFsIGZhLWFuZ2xlLXJpZ2h0Ij48L2kKICAgICAgICAgID48L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1sZy02IGNvbC1tZC02Ij4KICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgIDpjbGFzcz0iWwogICAgICAgICAgICAgICAgJ3RyZW5kaW5nLW5ld3MtcG9zdC1pdGVtcycsCiAgICAgICAgICAgICAgICBkYXJrQ2xhc3MgJiYgJ25ld3Nfc2VjdGlvbicgaW4gZGFya0NsYXNzCiAgICAgICAgICAgICAgICAgID8gZGFya0NsYXNzLm5ld3Nfc2VjdGlvbgogICAgICAgICAgICAgICAgICA6ICcnLAogICAgICAgICAgICAgIF0iCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8dGVtcGxhdGUKICAgICAgICAgICAgICAgIHYtZm9yPSIoc21hbGwsIGluZGV4KSBpbiBzbWFsbFBvc3RHYWxsZXJ5LnNsaWNlKDAsIDMpIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxyb3ctY2FyZAogICAgICAgICAgICAgICAgICA6Y2xhc3M9IlsKICAgICAgICAgICAgICAgICAgICBkYXJrQ2xhc3MgJiYgJ25ld3NfaXRlbScgaW4gZGFya0NsYXNzCiAgICAgICAgICAgICAgICAgICAgICA/IGRhcmtDbGFzcy5uZXdzX2l0ZW0KICAgICAgICAgICAgICAgICAgICAgIDogJycsCiAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICA6dHJlbmRpbmc9InRydWUiCiAgICAgICAgICAgICAgICAgIDpkYXRhcz0ic21hbGwiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbGctNiBjb2wtbWQtNiI+CiAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICA6Y2xhc3M9IlsKICAgICAgICAgICAgICAgICd0cmVuZGluZy1uZXdzLXBvc3QtaXRlbXMnLAogICAgICAgICAgICAgICAgZGFya0NsYXNzICYmICduZXdzX3NlY3Rpb24nIGluIGRhcmtDbGFzcwogICAgICAgICAgICAgICAgICA/IGRhcmtDbGFzcy5uZXdzX3NlY3Rpb24KICAgICAgICAgICAgICAgICAgOiAnJywKICAgICAgICAgICAgICBdIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHRlbXBsYXRlCiAgICAgICAgICAgICAgICB2LWZvcj0iKHNtYWxsLCBpbmRleCkgaW4gc21hbGxQb3N0R2FsbGVyeS5zbGljZSgzLCA2KSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8cm93LWNhcmQKICAgICAgICAgICAgICAgICAgOmNsYXNzPSJbCiAgICAgICAgICAgICAgICAgICAgZGFya0NsYXNzICYmICduZXdzX2l0ZW0nIGluIGRhcmtDbGFzcwogICAgICAgICAgICAgICAgICAgICAgPyBkYXJrQ2xhc3MubmV3c19pdGVtCiAgICAgICAgICAgICAgICAgICAgICA6ICcnLAogICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgICAgOnRyZW5kaW5nPSJ0cnVlIgogICAgICAgICAgICAgICAgICA6ZGF0YXM9InNtYWxsIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLWxnLTQiPgogICAgICAgIDxkaXYgY2xhc3M9InRyZW5kaW5nLXJpZ2h0LXNpZGViYXIiPgogICAgICAgICAgPEZvbGxvd0NvdW50IC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cmVuZGluZy1tb3N0LXZpZXcgbXQtMjUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWN0aW9uLXRpdGxlIj4KICAgICAgICAgICAgICA8aDMgY2xhc3M9InRpdGxlIj5Nw6FzIFZpc3RhczwvaDM+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0cmVuZGluZy1zaWRlYmFyLXNsaWRlciBwb3NpdGlvbi1yZWxhdGl2ZSI+CiAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgQGNsaWNrPSJ0c3NQcmV2IgogICAgICAgICAgICAgIGNsYXNzPSJwcmV2IHNsaWNrLWFycm93IgogICAgICAgICAgICAgIHN0eWxlPSJkaXNwbGF5OiBibG9jayIKICAgICAgICAgICAgICA+PGkgY2xhc3M9ImZhbCBmYS1hbmdsZS1sZWZ0Ij48L2kKICAgICAgICAgICAgPjwvc3Bhbj4KICAgICAgICAgICAgPHNsaWRlcgogICAgICAgICAgICAgIDpzZXR0aW5ncz0idHJlbmRpbmdTaWRlYmFyU2xpZGUiCiAgICAgICAgICAgICAgcmVmPSJ0cmVuZGluZ1NpZGViYXJTbGlkZSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InBvc3RfZ2FsbGVyeV9pdGVtcyI+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUKICAgICAgICAgICAgICAgICAgdi1mb3I9IihzbWFsbCwgaW5kZXgpIGluIHNtYWxsUG9zdEdhbGxlcnkuc2xpY2UoMCwgNikiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxyb3ctY2FyZAogICAgICAgICAgICAgICAgICAgIDpjbGFzcz0iWwogICAgICAgICAgICAgICAgICAgICAgZGFya0NsYXNzICYmICduZXdzX2l0ZW0nIGluIGRhcmtDbGFzcwogICAgICAgICAgICAgICAgICAgICAgICA/IGRhcmtDbGFzcy5uZXdzX2l0ZW0KICAgICAgICAgICAgICAgICAgICAgICAgOiAnJywKICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICAgIDpjb3VudGluZz0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICA6Y291bnQ9ImluZGV4ICsgMSIKICAgICAgICAgICAgICAgICAgICA6ZGF0YXM9InNtYWxsIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwb3N0X2dhbGxlcnlfaXRlbXMiPgogICAgICAgICAgICAgICAgPHRlbXBsYXRlCiAgICAgICAgICAgICAgICAgIHYtZm9yPSIoc21hbGwsIGluZGV4KSBpbiBzbWFsbFBvc3RHYWxsZXJ5LnNsaWNlKDAsIDYpIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8cm93LWNhcmQKICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9IlsKICAgICAgICAgICAgICAgICAgICAgIGRhcmtDbGFzcyAmJiAnbmV3c19pdGVtJyBpbiBkYXJrQ2xhc3MKICAgICAgICAgICAgICAgICAgICAgICAgPyBkYXJrQ2xhc3MubmV3c19pdGVtCiAgICAgICAgICAgICAgICAgICAgICAgIDogJycsCiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgICAgICA6Y291bnRpbmc9InRydWUiCiAgICAgICAgICAgICAgICAgICAgOmNvdW50PSJpbmRleCArIDEiCiAgICAgICAgICAgICAgICAgICAgOmRhdGFzPSJzbWFsbCIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvc2xpZGVyPgogICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgIEBjbGljaz0idHNzTmV4dCIKICAgICAgICAgICAgICBjbGFzcz0ibmV4dCBzbGljay1hcnJvdyIKICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTogYmxvY2siCiAgICAgICAgICAgICAgPjxpIGNsYXNzPSJmYWwgZmEtYW5nbGUtcmlnaHQiPjwvaQogICAgICAgICAgICA+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+Cjwvc2VjdGlvbj4K"},null]}
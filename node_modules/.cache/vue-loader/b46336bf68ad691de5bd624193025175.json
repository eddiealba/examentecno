{"remainingRequest":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\src\\components\\HomeTwo\\PostsTwo.vue?vue&type=template&id=2b8211aa&","dependencies":[{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\src\\components\\HomeTwo\\PostsTwo.vue","mtime":1639209490000},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651158781863},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1651158781173}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
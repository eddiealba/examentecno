{"remainingRequest":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\src\\components\\category\\Entertainment.vue?vue&type=template&id=11825ab2&","dependencies":[{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\src\\components\\category\\Entertainment.vue","mtime":1651261963963},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651192600504},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651192611693},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651192600504},{"path":"C:\\Users\\Nikolai Lopez\\OneDrive\\Escritorio\\Examen_2\\examentecno\\node_modules\\vue-loader\\lib\\index.js","mtime":1651192611691}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
{"remainingRequest":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\src\\components\\Utility\\Header\\index.vue?vue&type=template&id=c37cfd3a&","dependencies":[{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\src\\components\\Utility\\Header\\index.vue","mtime":1639209490000},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651158781863},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\Newsprk v1.1\\newspark-vue-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1651158781173}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJoZWFkZXIiLAogICAgeyBzdGF0aWNDbGFzczogImhlYWRlci1hcmVhIiB9LAogICAgWwogICAgICBfYygidG9wLWJhciIpLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1jZW50ZXJiYXIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3cgYWxpZ24taXRlbXMtY2VudGVyIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLWxnLTQiIH0sIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxvZ28iIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJyb3V0ZXItbGluayIsIHsgYXR0cnM6IHsgdG86ICIvIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvIiArIF92bS5pbWFnZSksCiAgICAgICAgICAgICAgICAgICAgICAgIGFsdDogImZlYXR1cmUiLAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX20oMCksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLW1lbnViYXIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRhaW5lciIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3cgYWxpZ24taXRlbXMtY2VudGVyIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb2wtbGctOCBjb2wtc20tMyBjb2wtMyIgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgInN2ZyIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1lbnUtZHJhd2VyIiwKICAgICAgICAgICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjdXJzb3I6ICJwb2ludGVyIiB9LAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICB4bWxuczogImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiwKICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6ICIwIDAgMjQgMjQiLAogICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIyNCIsCiAgICAgICAgICAgICAgICAgICAgICBmaWxsOiAiY3VycmVudENvbG9yIiwKICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjI0IiwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhpZGVTaWRlYmFyLmFwcGx5KG51bGwsIGFyZ3VtZW50cykKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgeyBhdHRyczogeyBmaWxsOiAibm9uZSIsIGQ6ICJNMCAwaDI0djI0SDB6IiB9IH0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJwYXRoIiwgewogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZDogIk0zIDRoMTh2MkgzVjR6bTYgN2gxMnYySDl2LTJ6bS02IDdoMTh2Mkgzdi0yeiIsCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgX2MoIm5hdi1pdGVtcyIsIHsgYXR0cnM6IHsgZGFya0NsYXNzOiBfdm0uZGFya0NsYXNzIH0gfSksCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF92bS5fbSgxKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbGctOCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImhlYWRlci1jZW50ZXJiYXItYWQiIH0sIFsKICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvYWRzL29uZV9hZC5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgfSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLWxnLTQgY29sLXNtLTkgY29sLTkiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItbWVudS1yaWdodGJhciIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaGVhZGVyLW1lbnUtc2VhcmNoIiB9LCBbCiAgICAgICAgICBfYygidWwiLCBbCiAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgICAgX2MoImkiLCB7IHN0YXRpY0NsYXNzOiAiZmFsIGZhLXNlYXJjaCIgfSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImZhbCBmYS11c2VyLWNpcmNsZSIgfSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuaWNlLXNlbGVjdC1pdGVtIiB9LCBbCiAgICAgICAgICBfYygic2VsZWN0IiwgeyBzdGF0aWNDbGFzczogInNlbGVjdC1sYW5nIiB9LCBbCiAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7ICJkYXRhLWRpc3BsYXkiOiAiRW5nbGlzaCIgfSB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KCJFbmdsaXNoIiksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygib3B0aW9uIiwgeyBhdHRyczogeyB2YWx1ZTogIjEiIH0gfSwgW192bS5fdigiQmFuZ2xhIildKSwKICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICIyIiB9IH0sIFtfdm0uX3YoIkhpbmRpIildKSwKICAgICAgICAgICAgX2MoIm9wdGlvbiIsIHsgYXR0cnM6IHsgdmFsdWU6ICIzIiB9IH0sIFtfdm0uX3YoIm9wdGlvbiIpXSksCiAgICAgICAgICAgIF9jKCJvcHRpb24iLCB7IGF0dHJzOiB7IHZhbHVlOiAiNCIgfSB9LCBbX3ZtLl92KCJQb3RhdG8iKV0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJoZWFkZXItdGVtcGVyYXR1cmUiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaWNvbiIgfSwgWwogICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy90ZW1wZXJhdHVyZS1pY29uLnN2ZyIpLAogICAgICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9KSwKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0ZW1wZXJhdHVyZS1jb250ZW50IHRleHQtY2VudGVyIiB9LCBbCiAgICAgICAgICAgIF9jKCJoNSIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiIDEzICIpLAogICAgICAgICAgICAgIF9jKCJzdXAiLCBbX3ZtLl92KCIwIiksIF9jKCJzdWIiLCBbX3ZtLl92KCJDIildKV0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoInAiLCBbX3ZtLl92KCJTYW4gRnJhbmNpc2NvIildKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgIF0pCiAgfSwKXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}
{"remainingRequest":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\src\\components\\Home\\index.vue?vue&type=template&id=df660e5c&scoped=true&","dependencies":[{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\src\\components\\Home\\index.vue","mtime":1639209490000},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651158781863},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651158781351},{"path":"C:\\Users\\PC-EDDIE\\Desktop\\examentecno\\node_modules\\vue-loader\\lib\\index.js","mtime":1651158781173}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJkaXYiLAogICAgWwogICAgICBfYygidmlkZW8tcG9wLXVwIiksCiAgICAgIF9jKCJkcmF3ZXIiLCB7CiAgICAgICAgYXR0cnM6IHsgc2lkZWJhcjogX3ZtLnNpZGViYXIgfSwKICAgICAgICBvbjogeyB0b2dnbGVTaWRlYmFyOiBfdm0udG9nZ2xlU2lkZWJhciB9LAogICAgICB9KSwKICAgICAgX2MoImhlYWRlci1vbmUiLCB7CiAgICAgICAgYXR0cnM6IHsgaW1hZ2U6ICJsb2dvLnBuZyIgfSwKICAgICAgICBvbjogeyB0b2dnbGVTaWRlYmFyOiBfdm0udG9nZ2xlU2lkZWJhciB9LAogICAgICB9KSwKICAgICAgX2MoInBvc3QtcGFydC1ob21lLW9uZSIpLAogICAgICBfYygicG9zdC1nYWxsZXJ5IiksCiAgICAgIF9jKCJmZWF0dXJlcyIpLAogICAgICBfYygidHJlbmRpbmctbmV3cyIpLAogICAgICBfYygic2luZ2xlLXBsYXktcG9zdCIpLAogICAgICBfYygidmlkZW8tbmV3cyIpLAogICAgICBfYygic2VjdGlvbiIsIHsgc3RhdGljQ2xhc3M6ICJhbGwtcG9zdC1hcmVhIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb250YWluZXIiIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IGp1c3RpZnktY29udGVudC1jZW50ZXIiIH0sIFsKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImNvbC1sZy04IiB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJlbnRlcnRhaW5tZW50LW5ld3MiKSwKICAgICAgICAgICAgICAgIF9jKCJzcG9ydHMtbmV3cyIpLAogICAgICAgICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgICAgICAgX2MoImJ1aXNuZXNzLW5ld3MiLCB7IHN0YXRpY0NsYXNzOiAicHQtNDAiIH0pLAogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1sZy00IiB9LCBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJhbGwtcG9zdC1zaWRlYmFyIiB9LAogICAgICAgICAgICAgICAgW19jKCJzaGFyZS1wb3N0IiksIF92bS5fbSgxKSwgX3ZtLl9tKDIpLCBfdm0uX20oMyldLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgICBfYygiZm9vdGVyLW9uZSIpLAogICAgICBfdm0uX20oNCksCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicG9zdC1hZGQgbXQtMzAiIH0sIFsKICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvYWRzL29uZV9hZC5wbmciKSwgYWx0OiAiYWQiIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1wb3N0IG10LTM1IiB9LCBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAiXG4gICAgICAgICAgICAgICAgICBzZWN0aW9uLXRpdGxlXG4gICAgICAgICAgICAgICAgICBkLWZsZXhcbiAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXG4gICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtcy1jZW50ZXJcbiAgICAgICAgICAgICAgICAiLAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImgzIiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbX3ZtLl92KCJVcGNvbWluZyBNYXRjaGVzIildKSwKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJBTEwgU0VFIildKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1wb3N0LWl0ZW1zIiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLXBvc3QtaXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1mbGFnIiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2ZsYWcvZmxhZy0xLnBuZyIpLAogICAgICAgICAgICAgICAgICBhbHQ6ICJmbGFnIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJHZXJtYW55ICIpLAogICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJWUyIpXSksCiAgICAgICAgICAgICAgICBfdm0uX3YoIiBGcmFuY2UiKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygidWwiLCBbCiAgICAgICAgICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJUb21vcnJvdyIpXSksCiAgICAgICAgICAgICAgICBfYygibGkiLCBbX3ZtLl92KCIyMjozMCAoQ1NUKSIpXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtY2lyY2xlIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjaXJjbGUtYmFyIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpcnN0IGNpcmNsZSIgfSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLXBvc3QtaXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1mbGFnIiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2ZsYWcvZmxhZy0yLnBuZyIpLAogICAgICAgICAgICAgICAgICBhbHQ6ICJmbGFnIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJTcGFpbiAiKSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiVlMiKV0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCIgUG9ydHVnYWwiKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygidWwiLCBbCiAgICAgICAgICAgICAgICBfYygibGkiLCBbX3ZtLl92KCJUb21vcnJvdyIpXSksCiAgICAgICAgICAgICAgICBfYygibGkiLCBbX3ZtLl92KCIyMjozMCAoQ1NUKSIpXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtY2lyY2xlIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjaXJjbGUtYmFyIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpcnN0IGNpcmNsZSIgfSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgXQogICAgICAgICksCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLXBvc3QtaXRlbSBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1mbGFnIiB9LCBbCiAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2ZsYWcvZmxhZy0zLnBuZyIpLAogICAgICAgICAgICAgICAgICBhbHQ6ICJmbGFnIiwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJSdXNzaWEgIiksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlZTIildKSwKICAgICAgICAgICAgICAgIF92bS5fdigiIEl0YWx5IiksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoInVsIiwgWwogICAgICAgICAgICAgICAgX2MoImxpIiwgW192bS5fdigiVG9tb3Jyb3ciKV0pLAogICAgICAgICAgICAgICAgX2MoImxpIiwgW192bS5fdigiMjI6MzAgKENTVCkiKV0pLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLWNpcmNsZSIgfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY2lyY2xlLWJhciIgfSwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmaXJzdCBjaXJjbGUiIH0pLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0KICAgICAgICApLAogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1wb3N0LWl0ZW0gZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtZmxhZyIgfSwgWwogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9mbGFnL2ZsYWctNC5wbmciKSwKICAgICAgICAgICAgICAgICAgYWx0OiAiZmxhZyIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLWNvbnRlbnQiIH0sIFsKICAgICAgICAgICAgICBfYygic3BhbiIsIFsKICAgICAgICAgICAgICAgIF92bS5fdigiQ3JvYXRpYSAiKSwKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiVlMiKV0pLAogICAgICAgICAgICAgICAgX3ZtLl92KCIgRW5nbGFuZCIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJ1bCIsIFsKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlRvbW9ycm93IildKSwKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIjIyOjMwIChDU1QpIildKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1jaXJjbGUiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNpcmNsZS1iYXIiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmlyc3QgY2lyY2xlIiB9KSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgICBfYygKICAgICAgICAgICJkaXYiLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInVwY29taW5nLW1hdGNoZXMtcG9zdC1pdGVtIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICAgICAgfSwKICAgICAgICAgIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ1cGNvbWluZy1tYXRjaGVzLWZsYWciIH0sIFsKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvZmxhZy9mbGFnLTUucG5nIiksCiAgICAgICAgICAgICAgICAgIGFsdDogImZsYWciLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1jb250ZW50IiB9LCBbCiAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIkdlcm1hbnkgIiksCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlZTIildKSwKICAgICAgICAgICAgICAgIF92bS5fdigiIEZyYW5jZSIpLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJ1bCIsIFsKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIlRvbW9ycm93IildKSwKICAgICAgICAgICAgICAgIF9jKCJsaSIsIFtfdm0uX3YoIjIyOjMwIChDU1QpIildKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXBjb21pbmctbWF0Y2hlcy1jaXJjbGUiIH0sIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNpcmNsZS1iYXIiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZmlyc3QgY2lyY2xlIiB9KSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdCiAgICAgICAgKSwKICAgICAgXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJuZXdzbGV0dGVyLWJveCBtdC00NSIgfSwgWwogICAgICBfYygiaDUiLCB7IHN0YXRpY0NsYXNzOiAidGl0bGUiIH0sIFtfdm0uX3YoIk5ld3NsZXR0ZXIiKV0pLAogICAgICBfYygicCIsIFsKICAgICAgICBfdm0uX3YoCiAgICAgICAgICAiIFlvdXIgZW1haWwgYWRkcmVzcyB3aWxsIG5vdCBiZSB0aGlzIHB1Ymxpc2hlZC4gUmVxdWlyZWQgZmllbGRzIGFyZSBOZXdzIFRvZGF5LiAiCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF9jKCJmb3JtIiwgeyBhdHRyczogeyBhY3Rpb246ICIjIiB9IH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImlucHV0LWJveCIgfSwgWwogICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIsIHBsYWNlaG9sZGVyOiAiWW91ciBlbWFpbCBhZGRyZXNzIiB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfYygiYnV0dG9uIiwgeyBhdHRyczogeyB0eXBlOiAiYnV0dG9uIiB9IH0sIFtfdm0uX3YoIlNJR04gVVAiKV0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJXZSBoYXRlIHNwYW0gYXMgbXVjaCBhcyB5b3UgZG8iKV0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQ2F0ZWdvcmllcy1wb3N0IG10LTQwIiB9LCBbCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAiXG4gICAgICAgICAgICAgICAgICBzZWN0aW9uLXRpdGxlXG4gICAgICAgICAgICAgICAgICBkLWZsZXhcbiAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudC1iZXR3ZWVuXG4gICAgICAgICAgICAgICAgICBhbGlnbi1pdGVtcy1jZW50ZXJcbiAgICAgICAgICAgICAgICAiLAogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImgzIiwgeyBzdGF0aWNDbGFzczogInRpdGxlIiB9LCBbX3ZtLl92KCJDYXRlZ29yaWVzIildKSwKICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbX3ZtLl92KCJBTEwgU0VFIildKSwKICAgICAgICBdCiAgICAgICksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQ2F0ZWdvcmllcy1pdGVtIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpdGVtIiB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2NhdGVnb3JpZXMtMS5qcGciKSwKICAgICAgICAgICAgICBhbHQ6ICJjYXRlZ29yaWVzIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJDYXRlZ29yaWVzLWNvbnRlbnQiIH0sIFsKICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sIFsKICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlJlc3RhdXJhbnQiKV0pLAogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9hcnJvdy5zdmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9jYXRlZ29yaWVzLTIuanBnIiksCiAgICAgICAgICAgICAgYWx0OiAiY2F0ZWdvcmllcyIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQ2F0ZWdvcmllcy1jb250ZW50IiB9LCBbCiAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJFbnRlcnRhaW5tZW50IildKSwKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvYXJyb3cuc3ZnIiksIGFsdDogIiIgfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcmllcy0zLmpwZyIpLAogICAgICAgICAgICAgIGFsdDogImNhdGVnb3JpZXMiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIkNhdGVnb3JpZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiRmluYW5jaWFsIildKSwKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvYXJyb3cuc3ZnIiksIGFsdDogIiIgfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcmllcy00LmpwZyIpLAogICAgICAgICAgICAgIGFsdDogImNhdGVnb3JpZXMiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIkNhdGVnb3JpZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiQnVzaW5lc3MiKV0pLAogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9hcnJvdy5zdmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaXRlbSIgfSwgWwogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9jYXRlZ29yaWVzLTUuanBnIiksCiAgICAgICAgICAgICAgYWx0OiAiY2F0ZWdvcmllcyIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQ2F0ZWdvcmllcy1jb250ZW50IiB9LCBbCiAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbCiAgICAgICAgICAgICAgX2MoInNwYW4iLCBbX3ZtLl92KCJTY2llbnRpc3RzIildKSwKICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvYXJyb3cuc3ZnIiksIGFsdDogIiIgfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgXSksCiAgICAgICAgICBdKSwKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIml0ZW0iIH0sIFsKICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvY2F0ZWdvcmllcy02LmpwZyIpLAogICAgICAgICAgICAgIGFsdDogImNhdGVnb3JpZXMiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSksCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIkNhdGVnb3JpZXMtY29udGVudCIgfSwgWwogICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIiMiIH0gfSwgWwogICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiSW50ZXJuYXRpb25hbOKAmXMiKV0pLAogICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltYWdlcy9hcnJvdy5zdmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzaWRlYmFyLWFkZCBwdC0zNSIgfSwgWwogICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiIyIgfSB9LCBbCiAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgIHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1hZ2VzL2Fkcy90d29fYWQuanBnIiksCiAgICAgICAgICAgICAgYWx0OiAiYWQiLAogICAgICAgICAgICB9LAogICAgICAgICAgfSksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ28tdG9wLWFyZWEiIH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJnby10b3Atd3JhcCIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZ28tdG9wLWJ0bi13cmFwIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiZ28tdG9wIGdvLXRvcC1idG4gZC1ibG9jayIsIGF0dHJzOiB7IGhyZWY6ICIjIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJmYSBmYS1hbmdsZS1kb3VibGUtdXAiIH0pLAogICAgICAgICAgICAgIF9jKCJpIiwgeyBzdGF0aWNDbGFzczogImZhIGZhLWFuZ2xlLWRvdWJsZS11cCIgfSksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgXSksCiAgICAgIF0pLAogICAgXSkKICB9LApdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}